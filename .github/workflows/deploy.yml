name: Production Deploy

on:
  push:
    tags:
      - 'v*'

jobs:
  deploy:
    name: Deploy Application
    runs-on: ubuntu-latest
    environment: production

    steps:
    - uses: actions/checkout@v4
    
    # Deploy Backend
    - name: Set up JDK 8
      uses: actions/setup-java@v4
      with:
        java-version: '8'
        distribution: 'temurin'
        cache: maven

    - name: Cache Maven dependencies
      uses: actions/cache@v3
      with:
        path: ~/.m2
        key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
        restore-keys: ${{ runner.os }}-m2

    - name: Build backend with Maven
      run: mvn -B package -DskipTests --file backend/pom.xml

    - name: Get JAR file name
      id: get_jar
      run: |
        JAR_FILE=$(find backend/second-server/target -name "*.jar" -type f | head -n 1)
        echo "jar_file=$JAR_FILE" >> $GITHUB_OUTPUT
        echo "JAR file: $JAR_FILE"

    - name: Stop existing backend application
      uses: appleboy/ssh-action@v0.1.5
      with:
        host: ${{ secrets.HOST }}
        username: ${{ secrets.USERNAME }}
        key: ${{ secrets.KEY }}
        script: |
          if pgrep -f "second-server.*\.jar"; then
            sudo pkill -f "second-server.*\.jar"
            echo "Waiting for application to stop..."
            sleep 10
          fi
          
          # Check if process is still running and kill it forcefully if needed
          if pgrep -f "second-server.*\.jar"; then
            sudo pkill -9 -f "second-server.*\.jar"
            sleep 5
          fi

    - name: Deploy backend JAR to server
      uses: appleboy/scp-action@v0.1.4
      with:
        host: ${{ secrets.HOST }}
        username: ${{ secrets.USERNAME }}
        key: ${{ secrets.KEY }}
        source: "${{ steps.get_jar.outputs.jar_file }}"
        target: "/home/deployer/campus-mall-app/"
        strip_components: 4

    - name: Create necessary directories
      uses: appleboy/ssh-action@v0.1.5
      with:
        host: ${{ secrets.HOST }}
        username: ${{ secrets.USERNAME }}
        key: ${{ secrets.KEY }}
        script: |
          mkdir -p /home/deployer/campus-mall-app/logs

    - name: Start backend application
      uses: appleboy/ssh-action@v0.1.5
      with:
        host: ${{ secrets.HOST }}
        username: ${{ secrets.USERNAME }}
        key: ${{ secrets.KEY }}
        script: |
          cd /home/deployer/campus-mall-app
          JAR_FILE=$(basename "${{ steps.get_jar.outputs.jar_file }}")
          chmod +x "$JAR_FILE"
          nohup java -jar -Dspring.profiles.active=prod "$JAR_FILE" > logs/app.log 2>&1 &
          echo "Application started with PID $!"
          sleep 10

    # Deploy Frontend
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '16'
        cache: 'npm'
        cache-dependency-path: 'frontend/package-lock.json'

    - name: Install frontend dependencies
      run: npm install
      working-directory: frontend

    - name: Build frontend
      run: npm run build
      working-directory: frontend

    - name: Deploy frontend to server
      uses: appleboy/scp-action@v0.1.4
      with:
        host: ${{ secrets.HOST }}
        username: ${{ secrets.USERNAME }}
        key: ${{ secrets.KEY }}
        source: "frontend/dist/*"
        target: "/home/deployer/campus-mall-frontend/"



