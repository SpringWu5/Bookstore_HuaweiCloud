name: Test Pull Request

on:
  pull_request:
    branches: [ "master", "main" ]

jobs:
  backend:
    name: Backend Integration Tests
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: backend

    services:
      mysql:
        image: mysql:5.7
        env:
          MYSQL_ROOT_PASSWORD: 123
          MYSQL_DATABASE: campus_service
        ports:
          - 3306:3306
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3

      redis:
        image: redis:alpine
        ports:
          - 6379:6379
        options: --health-cmd="redis-cli ping" --health-interval=10s --health-timeout=5s --health-retries=3

    steps:
    - uses: actions/checkout@v4
    
    - name: Set up JDK 8
      uses: actions/setup-java@v4
      with:
        java-version: '8'
        distribution: 'temurin'
        cache: maven

    - name: Cache Maven dependencies
      uses: actions/cache@v3
      with:
        path: ~/.m2
        key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
        restore-keys: ${{ runner.os }}-m2

    - name: Wait for MySQL and Redis
      run: |
        # Wait for MySQL to be ready
        until mysqladmin ping -h127.0.0.1 -P3306 -uroot -p123 --silent; do
          echo "Waiting for MySQL..."
          sleep 5
        done
        
        # Wait for Redis to be ready
        until redis-cli -h 127.0.0.1 -p 6379 ping; do
          echo "Waiting for Redis..."
          sleep 5
        done

    - name: Build with Maven
      run: mvn -B verify -DskipTests --file pom.xml

    - name: Run tests with coverage
      run: mvn test jacoco:report
      env:
        SPRING_PROFILES_ACTIVE: test
        SKY_DATASOURCE_HOST: localhost
        SKY_DATASOURCE_PORT: 3306
        SKY_DATASOURCE_DATABASE: campus_service
        SKY_DATASOURCE_USERNAME: root
        SKY_DATASOURCE_PASSWORD: 123
        SKY_REDIS_HOST: localhost
        SKY_REDIS_PORT: 6379

    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      if: always()
      with:
        file: '**/target/site/jacoco/jacoco.xml'
        flags: unittests
        name: codecov-umbrella

  frontend:
    name: Frontend Build and Test
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '16'
        cache: 'npm'
        cache-dependency-path: 'frontend/package-lock.json'

    - name: Install frontend dependencies
      run: npm install
      working-directory: frontend

    - name: Build frontend
      run: npm run build
      working-directory: frontend

    - name: Run frontend tests
      run: npm run test:unit
      working-directory: frontend
      continue-on-error: true